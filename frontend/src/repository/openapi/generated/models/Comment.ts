/* tslint:disable */
/* eslint-disable */
/**
 * kottage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import { User, UserFromJSON, UserFromJSONTyped, UserToJSON } from './'

/**
 *
 * @export
 * @interface Comment
 */
export interface Comment {
  /**
   * id is unique in an entry. Both entry 1 and entry 2 may have comment with id 1
   * @type {number}
   * @memberof Comment
   */
  id: number
  /**
   *
   * @type {number}
   * @memberof Comment
   */
  entrySerialNumber: number
  /**
   *
   * @type {string}
   * @memberof Comment
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof Comment
   */
  body: string
  /**
   *
   * @type {Date}
   * @memberof Comment
   */
  createdAt: Date
  /**
   *
   * @type {User}
   * @memberof Comment
   */
  author?: User
}

export function CommentFromJSON(json: any): Comment {
  return CommentFromJSONTyped(json, false)
}

export function CommentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Comment {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: json['id'],
    entrySerialNumber: json['entrySerialNumber'],
    name: json['name'],
    body: json['body'],
    createdAt: new Date(json['createdAt']),
    author: !exists(json, 'author') ? undefined : UserFromJSON(json['author']),
  }
}

export function CommentToJSON(value?: Comment | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    entrySerialNumber: value.entrySerialNumber,
    name: value.name,
    body: value.body,
    createdAt: value.createdAt.toISOString(),
    author: UserToJSON(value.author),
  }
}
