/* tslint:disable */
/* eslint-disable */
/**
 * kottage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { ErrorCause } from './ErrorCause'
import {
  ErrorCauseFromJSON,
  ErrorCauseFromJSONTyped,
  ErrorCauseToJSON,
  ErrorCauseToJSONTyped,
} from './ErrorCause'

/**
 *
 * @export
 * @interface Error400
 */
export interface Error400 {
  /**
   *
   * @type {number}
   * @memberof Error400
   */
  status: number
  /**
   *
   * @type {string}
   * @memberof Error400
   */
  description: string
  /**
   *
   * @type {ErrorCause}
   * @memberof Error400
   */
  cause?: ErrorCause
}

/**
 * Check if a given object implements the Error400 interface.
 */
export function instanceOfError400(value: object): value is Error400 {
  if (!('status' in value) || value['status'] === undefined) return false
  if (!('description' in value) || value['description'] === undefined)
    return false
  return true
}

export function Error400FromJSON(json: any): Error400 {
  return Error400FromJSONTyped(json, false)
}

export function Error400FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Error400 {
  if (json == null) {
    return json
  }
  return {
    status: json['status'],
    description: json['description'],
    cause:
      json['cause'] == null ? undefined : ErrorCauseFromJSON(json['cause']),
  }
}

export function Error400ToJSON(json: any): Error400 {
  return Error400ToJSONTyped(json, false)
}

export function Error400ToJSONTyped(
  value?: Error400 | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    status: value['status'],
    description: value['description'],
    cause: ErrorCauseToJSON(value['cause']),
  }
}
