/* tslint:disable */
/* eslint-disable */
/**
 * kottage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface Health
 */
export interface Health {
  /**
   *
   * @type {string}
   * @memberof Health
   */
  description: string
  /**
   *
   * @type {string}
   * @memberof Health
   */
  version: string
  /**
   *
   * @type {string}
   * @memberof Health
   */
  databaseType: string
}

/**
 * Check if a given object implements the Health interface.
 */
export function instanceOfHealth(value: object): value is Health {
  if (!('description' in value) || value['description'] === undefined)
    return false
  if (!('version' in value) || value['version'] === undefined) return false
  if (!('databaseType' in value) || value['databaseType'] === undefined)
    return false
  return true
}

export function HealthFromJSON(json: any): Health {
  return HealthFromJSONTyped(json, false)
}

export function HealthFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Health {
  if (json == null) {
    return json
  }
  return {
    description: json['description'],
    version: json['version'],
    databaseType: json['databaseType'],
  }
}

export function HealthToJSON(json: any): Health {
  return HealthToJSONTyped(json, false)
}

export function HealthToJSONTyped(
  value?: Health | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    description: value['description'],
    version: value['version'],
    databaseType: value['databaseType'],
  }
}
