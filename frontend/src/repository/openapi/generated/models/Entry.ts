/* tslint:disable */
/* eslint-disable */
/**
 * kottage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { User } from './User'
import {
  UserFromJSON,
  UserFromJSONTyped,
  UserToJSON,
  UserToJSONTyped,
} from './User'

/**
 *
 * @export
 * @interface Entry
 */
export interface Entry {
  /**
   *
   * @type {number}
   * @memberof Entry
   */
  serialNumber: number
  /**
   *
   * @type {string}
   * @memberof Entry
   */
  title: string
  /**
   *
   * @type {string}
   * @memberof Entry
   */
  body: string
  /**
   *
   * @type {Date}
   * @memberof Entry
   */
  dateTime: Date
  /**
   *
   * @type {number}
   * @memberof Entry
   */
  commentsTotalCount: number
  /**
   *
   * @type {User}
   * @memberof Entry
   */
  author: User
}

/**
 * Check if a given object implements the Entry interface.
 */
export function instanceOfEntry(value: object): value is Entry {
  if (!('serialNumber' in value) || value['serialNumber'] === undefined)
    return false
  if (!('title' in value) || value['title'] === undefined) return false
  if (!('body' in value) || value['body'] === undefined) return false
  if (!('dateTime' in value) || value['dateTime'] === undefined) return false
  if (
    !('commentsTotalCount' in value) ||
    value['commentsTotalCount'] === undefined
  )
    return false
  if (!('author' in value) || value['author'] === undefined) return false
  return true
}

export function EntryFromJSON(json: any): Entry {
  return EntryFromJSONTyped(json, false)
}

export function EntryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Entry {
  if (json == null) {
    return json
  }
  return {
    serialNumber: json['serialNumber'],
    title: json['title'],
    body: json['body'],
    dateTime: new Date(json['dateTime']),
    commentsTotalCount: json['commentsTotalCount'],
    author: UserFromJSON(json['author']),
  }
}

export function EntryToJSON(json: any): Entry {
  return EntryToJSONTyped(json, false)
}

export function EntryToJSONTyped(
  value?: Entry | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    serialNumber: value['serialNumber'],
    title: value['title'],
    body: value['body'],
    dateTime: value['dateTime'].toISOString(),
    commentsTotalCount: value['commentsTotalCount'],
    author: UserToJSON(value['author']),
  }
}
