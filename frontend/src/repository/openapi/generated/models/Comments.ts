/* tslint:disable */
/* eslint-disable */
/**
 * kottage
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { Comment } from './Comment'
import {
  CommentFromJSON,
  CommentFromJSONTyped,
  CommentToJSON,
  CommentToJSONTyped,
} from './Comment'

/**
 *
 * @export
 * @interface Comments
 */
export interface Comments {
  /**
   *
   * @type {number}
   * @memberof Comments
   */
  totalCount: number
  /**
   *
   * @type {Array<Comment>}
   * @memberof Comments
   */
  items: Array<Comment>
}

/**
 * Check if a given object implements the Comments interface.
 */
export function instanceOfComments(value: object): value is Comments {
  if (!('totalCount' in value) || value['totalCount'] === undefined)
    return false
  if (!('items' in value) || value['items'] === undefined) return false
  return true
}

export function CommentsFromJSON(json: any): Comments {
  return CommentsFromJSONTyped(json, false)
}

export function CommentsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Comments {
  if (json == null) {
    return json
  }
  return {
    totalCount: json['totalCount'],
    items: (json['items'] as Array<any>).map(CommentFromJSON),
  }
}

export function CommentsToJSON(json: any): Comments {
  return CommentsToJSONTyped(json, false)
}

export function CommentsToJSONTyped(
  value?: Comments | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    totalCount: value['totalCount'],
    items: (value['items'] as Array<any>).map(CommentToJSON),
  }
}
